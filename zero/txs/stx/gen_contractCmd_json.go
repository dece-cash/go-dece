// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package stx

import (
	"encoding/json"

	"github.com/dece-cash/go-dece/czero/c_type"
	"github.com/dece-cash/go-dece/zero/txs/assets"
)

var _ = (*ContractCmdMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (c ContractCmd) MarshalJSON() ([]byte, error) {
	type ContractCmd struct {
		Asset assets.Asset
		To    *c_type.PKr
		Data  ContractData
	}
	var enc ContractCmd
	enc.Asset = c.Asset
	enc.To = c.To
	enc.Data = c.Data
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (c *ContractCmd) UnmarshalJSON(input []byte) error {
	type ContractCmd struct {
		Asset *assets.Asset
		To    *c_type.PKr `rlp:"nil"`
		Data  *ContractData
	}
	var dec ContractCmd
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Asset != nil {
		c.Asset = *dec.Asset
	}
	if dec.To != nil {
		c.To = dec.To
	}
	if dec.Data != nil {
		c.Data = *dec.Data
	}
	return nil
}
